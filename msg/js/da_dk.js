goog.provide('Blockly.Msg.da_dk');
goog.require('Blockly.Msg');
Blockly.Msg.ADD_COMMENT = "Tilføj kommentar";
Blockly.Msg.CHANGE_VALUE_TITLE = "Ændre værdien:";
Blockly.Msg.COLLAPSE_ALL = "Kollaps blokke";
Blockly.Msg.COLLAPSE_BLOCK = "Kollaps blok";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farve 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "farve 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http:\/\/meyerweb.com\/eric\/tools\/color-blend\/";
Blockly.Msg.COLOUR_BLEND_RATIO = "forhold";
Blockly.Msg.COLOUR_BLEND_TITLE = "bland";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blander to farver sammen med et givent forhold (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "http:\/\/da.wikipedia.org\/wiki\/Farve";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Vælg en farve fra paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http:\/\/randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "tilfældig farve";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Vælge en tilfældig farve.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grøn";
Blockly.Msg.COLOUR_RGB_HELPURL = "http:\/\/www.december.com\/html\/spec\/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rød";
Blockly.Msg.COLOUR_RGB_TITLE = "farve med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Opret en farve med den angivne mængde af rød, grøn og blå.  Alle værdier skal være mellem 0 og 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryd løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Fortsæt med næste iteration af løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryd ud af den indeholdende løkke.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Spring over resten af denne løkke, og fortsæt med den næste iteration.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advarsel: Denne blok må kun bruges inden i en løkke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#for_each";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "i listen";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "for hvert element";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For hvert element på en liste, sæt variablen '%1' til elementet, og gør derefter nogle udsagn.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "fra %1 til %2 af %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "regn med";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Hav variablen %1 tage værdierne fra startnummeret til slutnummeret, optælling af det angivne interval, og udfør de angivne blokke.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Tilføj en betingelse på en hvis blok.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Tilføje en final, catch-all betingelse til en hvis blok.";
Blockly.Msg.CONTROLS_IF_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Tilføj, fjern eller omarranger sektioner til at omkonfigurere denne hvis blok.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ellers";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "eller hvis";
Blockly.Msg.CONTROLS_IF_MSG_IF = "hvis";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Hvis en værdi er sand, så gør nogle udsagn.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Hvis en værdi er sand, så udfør den første udsagnsblok.  Ellers udfør den anden udsagnsblok.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Hvis den første værdi er sand, så udfør den første blok af udsagn. Ellers, hvis den anden værdi er sand, udfør den anden udsagnsblok.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Hvis den første værdi er sand, så udfør den første blok af udsagn. Ellers, hvis den anden værdi er sand, udfør den anden blok af udsagn. Hvis ingen af værdierne er sande, udfør de sidste blokke af udsagn.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http:\/\/da.wikipedia.org\/wiki\/For_løkke";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "udfør";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "gentag %1 gange";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "gentag";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "gange";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Gør nogle udsagn flere gange.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Gentag indtil";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Gentag mens";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mens en værdi er falsk, så udfør nogle udsagn.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mens en værdi er sand, så udfør nogle udsagn.";
Blockly.Msg.DELETE_BLOCK = "Slet blok";
Blockly.Msg.DELETE_X_BLOCKS = "Slet %1 blokke";
Blockly.Msg.DISABLE_BLOCK = "Deaktivere blok";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliker";
Blockly.Msg.ENABLE_BLOCK = "Aktiver blok";
Blockly.Msg.EXPAND_ALL = "Udvid blokke";
Blockly.Msg.EXPAND_BLOCK = "Udvid blok";
Blockly.Msg.EXTERNAL_INPUTS = "Eksterne indgange";
Blockly.Msg.HELP = "Hjælp";
Blockly.Msg.INLINE_INPUTS = "Interne indgange";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "opret tom liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnerer en en tom liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Tilføj, fjern eller omarranger sektioner til at omkonfigurere denne list blok.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "opret listen med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Føje et element til listen.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Opret en liste med et vilkårligt antal elementer.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "første";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# fra slutningen";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "hent";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hent og fjern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "sidste";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "tilfældige";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fjern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returnerer elementet på den angivne placering i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returnerer elementet på den angivne placering i en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerer det sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fjerner og returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fjerner og returnerer elementet på den angivne placering i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fjerner og returnerer elementet på den angivne placering i en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fjerner og returnerer det sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fjerner og returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fjerner det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Returnerer elementet på den angivne placering i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Returnerer elementet på den angivne placering i en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fjerner det sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fjerner et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "til # fra slutningen";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "til #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "til sidste";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Lav en kopi af den angivne del af en liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "Find første forekomst af et element";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "Find sidste forekomst af et element";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first\/last occurrence of the item in the list.  Returns 0 if text is not found.";
Blockly.Msg.LISTS_INLIST = "i listen";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#is_empty";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 er tom";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "længden af %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerer længden af en liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "Indsæt ved";
Blockly.Msg.LISTS_SET_INDEX_SET = "sæt";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falsk";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerer enten sand eller falsk.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sandt";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "ikke %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false.  Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "og";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnerer sandt, hvis begge input-enheder er sande.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnerer sandt, hvis mindst en af input-enhederne er sande.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "Hvis den er falsk";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "Hvis det er sandt";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnerer summen af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "af";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "ændre";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Føje et nummer til variablen '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Et nummer.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "gennemsnitet af listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianen af listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mindste værdi af listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "tilfældige element fra listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summen af listen";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "afrund";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "runde ned";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "runde op";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratroden";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
Blockly.Msg.NEW_VARIABLE = "New variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_APPEND_TO = "til";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Adjusting_text_case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hent første bogstav";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hent bogstav # fra slutningen";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hent bogstav #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "hent sidste bogstav";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Tilføj et element til teksten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "sammen";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "gå til bogstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "gp til sidste bogstav";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i tekst";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i tekst";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnerer indekset for første\/sidste forekomst af første tekst i den anden tekst.  Returnerer 0, hvis teksten ikke findes.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerer sand, hvis den angivne tekst er tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "oprette tekst med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Oprette et del tekst ved at sammenslutte et vilkårligt antal elementer.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "længden af %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Printing_text";
Blockly.Msg.TEXT_PRINT_TITLE = "udskriv %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Getting_input_from_the_user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "http:\/\/da.wikipedia.org\/wiki\/Tekststreng";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Et bogstav, ord eller linje tekst.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Trimming_%28removing%29_spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Get";
Blockly.Msg.VARIABLES_GET_TAIL = "";
Blockly.Msg.VARIABLES_GET_TITLE = "";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerer værdien af denne variabel.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Set";
Blockly.Msg.VARIABLES_SET_TAIL = "til";
Blockly.Msg.VARIABLES_SET_TITLE = "sæt";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
