goog.provide('Blockly.Msg.ca_es');
goog.require('Blockly.Msg');
Blockly.Msg.ADD_COMMENT = "Afegeix un comentari";
Blockly.Msg.CHANGE_VALUE_TITLE = "Canvia el valor:";
Blockly.Msg.COLLAPSE_ALL = "Col·lapsa els blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Col·lapsa el bloc";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http:\/\/meyerweb.com\/eric\/tools\/color-blend\/";
Blockly.Msg.COLOUR_BLEND_RATIO = "proporció";
Blockly.Msg.COLOUR_BLEND_TITLE = "barreja";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Barreja dos colors amb la proporció especificada (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "http:\/\/ca.wikipedia.org\/wiki\/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Escull un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http:\/\/randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatori";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Escull un color a l'atzar.";
Blockly.Msg.COLOUR_RGB_BLUE = "blau";
Blockly.Msg.COLOUR_RGB_GREEN = "verd";
Blockly.Msg.COLOUR_RGB_HELPURL = "http:\/\/www.december.com\/html\/spec\/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "vermell";
Blockly.Msg.COLOUR_RGB_TITLE = "color amb";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color amb una quantitat específica de vermell, verd i blau. Tots els valors s'han de situar entre 0 i 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https:\/\/code.google.com\/p\/blocs\/wiki\/Loops#Loop_Termination_Blocs";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "surt del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "segueix amb la següent iteració del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Surt del bucle que el conté.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Ignora la resta d'aquest bucle i continua amb la següent interació.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Avís: Aquest bloc només es pot utilitzar dins d'un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#for_each";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "en la llista";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "per a cada element";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Per a cada element d'una llista, defineix la variable '%1' amb l'element, i després realitza algunes declaracions.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "des de %1 fins a %2 cada %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "compta amb";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Fes que la variable %1 tingui els valors del nombre inicial fins al nombre final, comptant en l'interval especificat, i fes els blocs de dintre.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Afegeix una condició al bloc \"si\".";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Afegeix una condició final, que ho capta tot, al bloc \"si\".";
Blockly.Msg.CONTROLS_IF_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Afegeix, treu o reordena seccions per reconfigurar aquest bloc \"si\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "en cas contrari";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "en cas contrari, si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor és cert, llavors fes un bloc d'ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor és cert, llavors fes el primer bloc d'ordres. En cas contrari, fes el segon bloc d'ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor és cert, llavors fes el primer bloc d'ordres. En cas contrari, si el segon valor és cert, fes el segon bloc d'ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor és cert, fes el primer bloc d'ordres. En cas contrari, si el segon valor és cert, fes el segon bloc d'instruccions. Si cap dels valor són certs, fes l'últim bloc d'ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "fes";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repeteix %1 vegades";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "repeteix";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "vegades";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Fes un bloc d'ordres moltes vegades.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http:\/\/code.google.com\/p\/bloc\/wiki\/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repeteix fins que";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeteix mentre";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Fes un bloc d'ordres mentre un valor sigui fals.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Fes un bloc d'ordres mentre un valor sigui cert.";
Blockly.Msg.DELETE_BLOCK = "Elimina el bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Elimina els %1 blocs";
Blockly.Msg.DISABLE_BLOCK = "Deshabilita el bloc";
Blockly.Msg.DUPLICATE_BLOCK = "Duplica";
Blockly.Msg.ENABLE_BLOCK = "Habilita el bloc";
Blockly.Msg.EXPAND_ALL = "Expandeix els blocs";
Blockly.Msg.EXPAND_BLOCK = "Expandeix el bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entrades externes";
Blockly.Msg.HELP = "Ajuda";
Blockly.Msg.INLINE_INPUTS = "Entrades en línia";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Linked_llista#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crea una llista buida";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Retorna una llista, de longitud 0, que no conté cap registre de dades";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "llista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Afegeix, treu o reordena seccions per reconfigurar aquest bloc de llista.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crea una llista amb";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Afegeix un element a la llista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crea una llista amb qualsevol nombre d'elements.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "el primer";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# començant pel final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "l'element #";
Blockly.Msg.LISTS_GET_INDEX_GET = "extreu";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "extreu i elimina";
Blockly.Msg.LISTS_GET_INDEX_LAST = "l'últim element";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "un element aleatori";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "elimina";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Retorna el primer element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Retorna l'element a la posició específicada d'una llista. #1 és l'últim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Retorna l'element a la posició espeficiada d'una llista. #1 és el primer element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Retorna l'últim element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Retorna un element aleatori d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina i retorna el primer element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina i retorna l'element a la posició específicada d'una llista. #1 és l'últim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina i retorna l'element a la posició especificada d'una llista. #1 és el primer element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina i retorna l'últim element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina i retorna un element aleatori d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina l'element a la posició especificada d'una llista. #1 és l'últim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina l'element a la posició especificada d'una llista. #1 és el primer element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina l'últim element d'una llista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un element aleatori d'una llista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "fins a # començant pel final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "fins a #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "fins l'últim";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https:\/\/code.google.com\/p\/bloc\/wiki\/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "extreu la subllista des del primer";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "extreu la subllista des de # començant pel final,";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "extreu la subllista des de #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una còpia de la part especificada d'una llista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "troba la primera aparició de l'element";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "troba l'última aparició de l'element";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Retorna l'índex de la primera\/última ocurrència de l'element en la llista. Retorna 0 si el text no hi apareix.";
Blockly.Msg.LISTS_INLIST = "en la llista";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#is_empty";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 està buit";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Retorna la quantitat d'elements d'una llista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "crea una llista amb l'element %1 repetit %2 vegades";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una llista que conté un valor repetit una nombre determinat de vegades.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "fals";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Retorna cert o fals.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "cert";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Retorna cert si l'entrada és falsa. Retorna fals si l'entrada és certa.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Retorna nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "i";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Retorna cert si les dues entrades són certes.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Retorna cert si almenys una de les entrades és certa.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prova";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si és fals";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si és cert";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Retorna la suma dels dos nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Retorna la divisió de dos nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Retorna la resta de dos nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Retorna el producte de dos nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Retorna el primer nombre elevat al segon nombre.";
Blockly.Msg.MATH_CHANGE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "per";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "canvia";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracció aleatòria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Retorna una fracció aleatòria entre 0.0 (inclós) i 1.0 (exclós).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "nombre enter aleatori entre %1 i %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrodoneix";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrodoneix cap avall";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrodoneix cap amunt";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrodoneix un nombre cap amunt o cap avall.";
Blockly.Msg.MATH_SINGLE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "valor absolut";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "arrel quadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Retorna el valor absolut d'un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Retorna e elevat a un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Retorna el logaritme natural d'un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Retorna el logaritme en base 10 d'un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Retorna la negació d'un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Retorn 10 elevat a un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Retorna l'arrel quadrada d'un nombre.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Retorna l'arc cosinus d'un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Retorn l'arc sinus d'un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Retorna l'arc tangent d'un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Retorna el cosinus d'un angle en graus (no radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Retorna el sinus d'un angle en graus (no radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Retorna la tangent d'un angle en graus (no radians).";
Blockly.Msg.NEW_VARIABLE = "Crea una nova variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nom de la variable:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "amb:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retorna";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Adjusting_text_case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first\/last occurrence of first text in the second text.  Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 està buit";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Printing_text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Getting_input_from_the_user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Trimming_%28removing%29_spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Get";
Blockly.Msg.VARIABLES_GET_TAIL = "";
Blockly.Msg.VARIABLES_GET_TITLE = "";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Set";
Blockly.Msg.VARIABLES_SET_TAIL = "to";
Blockly.Msg.VARIABLES_SET_TITLE = "set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";
