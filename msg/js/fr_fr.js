goog.provide('Blockly.Msg.fr_fr');
goog.require('Blockly.Msg');
Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.COLLAPSE_ALL = "R\u00e9duire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "R\u00e9duire le bloc";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "m\u00e9langer";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "M\u00e9lange deux couleurs ensemble avec un ratio donn\u00e9 (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "http://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette";
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur al\u00e9atoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorer avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Cr\u00e9er une couleur avec la quantit\u00e9 sp\u00e9cifi\u00e9e de rouge, vert et bleu. Toutes les valeurs doivent \u00eatre entre 0 et 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "sortir de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuer avec la prochaine it\u00e9ration de la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l\u2019it\u00e9ration suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait \u00eatre utilis\u00e9 que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each pour chaque bloc";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "dans la liste";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "pour chaque \u00e9l\u00e9ment";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque \u00e9l\u00e9ment dans une liste, donner la valeur de l\u2019\u00e9l\u00e9ment \u00e0 la variable '%1', puis ex\u00e9cuter certains ordres.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "de %1 \u00e0 %2 par %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "compter avec";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire en sorte que la variable %1 prenne les valeurs depuis le num\u00e9ro de d\u00e9but jusqu\u2019au num\u00e9ro de fin, en s\u2019incr\u00e9mentant de l\u2019intervalle sp\u00e9cifi\u00e9, et ex\u00e9cuter les ordres sp\u00e9cifi\u00e9s.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "http://code.google.com/p/blockly/wiki/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou r\u00e9ordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors ex\u00e9cuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors ex\u00e9cuter le premier bloc d\u2019ordres. Sinon, ex\u00e9cuter le second bloc d\u2019ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la premi\u00e8re valeur est vraie, alors ex\u00e9cuter le premier bloc d\u2019ordres. Sinon, si la seconde valeur est vraie, ex\u00e9cuter le second bloc d\u2019ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la premi\u00e8re valeur est vraie, alors ex\u00e9cuter le premier bloc d\u2019ordres. Sinon, si la seconde valeur est vraie, ex\u00e9cuter le second bloc d\u2019ordres. Si aucune des valeurs n\u2019est vraie, ex\u00e9cuter le dernier bloc d\u2019ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "r\u00e9p\u00e9ter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "r\u00e9p\u00e9ter";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ex\u00e9cuter certains ordres plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http://code.google.com/p/blockly/wiki/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "r\u00e9p\u00e9ter jusqu\u2019\u00e0";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "r\u00e9p\u00e9ter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu\u2019une valeur est fausse, alors ex\u00e9cuter certains ordres.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu\u2019une valeur est vraie, alors ex\u00e9cuter certains ordres.";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DISABLE_BLOCK = "D\u00e9sactiver le bloc";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.EXPAND_ALL = "D\u00e9velopper les blocs";
Blockly.Msg.EXPAND_BLOCK = "D\u00e9velopper le bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entr\u00e9es externes";
Blockly.Msg.HELP = "Aide";
Blockly.Msg.INLINE_INPUTS = "Entr\u00e9es en ligne";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "cr\u00e9er une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou r\u00e9ordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "cr\u00e9er une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un \u00e9l\u00e9ment \u00e0 la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Cr\u00e9er une liste avec un nombre quelconque d\u2019\u00e9l\u00e9ments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "al\u00e9atoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le dernier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le premier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un \u00e9l\u00e9ment au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le dernier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le premier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un \u00e9l\u00e9ment au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le dernier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le premier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un \u00e9l\u00e9ment au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu\u2019\u00e0 # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu\u2019\u00e0 #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu\u2019\u00e0 la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le d\u00e9but";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Cr\u00e9e une copie de la partie sp\u00e9cifi\u00e9e d\u2019une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la premi\u00e8re occurrence de l\u2019\u00e9l\u00e9ment";
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la derni\u00e8re occurrence de l\u2019\u00e9l\u00e9ment";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l\u2019index de la premi\u00e8re/derni\u00e8re occurrence de l\u2019\u00e9l\u00e9ment dans la liste. Renvoie 0 si le texte n\u2019est pas trouv\u00e9.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d\u2019une liste.";
Blockly.Msg.LISTS_REPEAT_TITLE = "cr\u00e9er une liste avec l\u2019\u00e9l\u00e9ment %1 r\u00e9p\u00e9t\u00e9 %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Cr\u00e9e une liste consistant en la valeur fournie r\u00e9p\u00e9t\u00e9e le nombre de fois indiqu\u00e9.";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "ins\u00e9rer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Ins\u00e8re l\u2019\u00e9l\u00e9ment au d\u00e9but d\u2019une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Ins\u00e8re l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le dernier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Ins\u00e8re l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le premier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l\u2019\u00e9l\u00e9ment \u00e0 la fin d\u2019une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Ins\u00e8re l\u2019\u00e9l\u00e9ment au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le dernier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l\u2019\u00e9l\u00e9ment \u00e0 la position indiqu\u00e9e dans une liste. #1 est le premier \u00e9l\u00e9ment.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier \u00e9l\u00e9ment dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un \u00e9l\u00e9ment au hasard dans une liste.";
Blockly.Msg.LISTS_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http://code.google.com/p/blockly/wiki/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entr\u00e9es sont \u00e9gales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la premi\u00e8re entr\u00e9e est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la premi\u00e8re entr\u00e9e est plus grande ou \u00e9gale \u00e0 la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la premi\u00e8re entr\u00e9e est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la premi\u00e8re entr\u00e9e est plus petite ou \u00e9gale \u00e0 la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entr\u00e9es ne sont pas \u00e9gales.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http://code.google.com/p/blockly/wiki/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l\u2019entr\u00e9e est fausse. Renvoie faux si l\u2019entr\u00e9e est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "http://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http://code.google.com/p/blockly/wiki/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entr\u00e9es sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entr\u00e9es est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "V\u00e9rifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai'\u202f; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la diff\u00e9rence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre \u00e9lev\u00e9 \u00e0 la puissance du second.";
Blockly.Msg.MATH_CHANGE_HELPURL = "http://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "de";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "incr\u00e9menter";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre \u00e0 la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "http://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : \u03c0 (3.141\u2026), e (2.718\u2026), \u03c6 (1.618\u2026), sqrt(2) (1.414\u2026), sqrt(\u00bd) (0.707\u2026), ou \u221e (infini).";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre \u00e0 \u00eatre entre les limites sp\u00e9cifi\u00e9es (incluses).";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est n\u00e9gatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "V\u00e9rifier si un nombre est pair, impair, premier, entier, positif, n\u00e9gatif, ou s\u2019il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "http://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 \u00f7 %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division des deux nombres.";
Blockly.Msg.MATH_NUMBER_HELPURL = "http://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "m\u00e9diane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "\u00e9l\u00e9ment al\u00e9atoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "\u00e9cart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithm\u00e9tique) des valeurs num\u00e9riques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre m\u00e9dian dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des \u00e9l\u00e9ment(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un \u00e9l\u00e9ment dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l\u2019\u00e9cart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction al\u00e9atoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction al\u00e9atoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier al\u00e9atoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier al\u00e9atoire entre les deux limites sp\u00e9cifi\u00e9es, incluses.";
Blockly.Msg.MATH_ROUND_HELPURL = "http://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir \u00e0 l\u2019inf\u00e9rieur";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir au sup\u00e9rieur";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SINGLE_HELPURL = "http://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolu";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carr\u00e9e";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d\u2019un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e \u00e0 la puissance d\u2019un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d\u2019un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d\u2019un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l\u2019oppos\u00e9 d\u2019un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 \u00e0 la puissance d\u2019un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carr\u00e9e d\u2019un nombre.";
Blockly.Msg.MATH_TRIG_HELPURL = "http://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l\u2019arccosinus d\u2019un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l\u2019arcsinus d\u2019un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l\u2019arctangente d\u2019un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d\u2019un angle en degr\u00e9s (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d\u2019un angle en degr\u00e9s (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d\u2019un angle en degr\u00e9s (pas en radians).";
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable\u2026";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nom de la nouvelle variable :";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ex\u00e9cuter la fonction '%1' d\u00e9finie par l\u2019utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ex\u00e9cuter la fonction '%1' d\u00e9finie par l\u2019utilisateur et utiliser son r\u00e9sultat.";
Blockly.Msg.PROCEDURES_CREATE_DO = "Cr\u00e9er '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faire quelque chose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "\u00e0";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Cr\u00e9e une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Cr\u00e9e une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des param\u00e8tres dupliqu\u00e9s.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la d\u00e9finition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n\u2019\u00eatre utilis\u00e9 que dans une d\u00e9finition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l\u2019entr\u00e9e :";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entr\u00e9es";
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable\u2026";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables '%1' en :";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_TO = "\u00e0";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte \u00e0 la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au D\u00e9but De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la premi\u00e8re lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la derni\u00e8re lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre \u00e0 la position indiqu\u00e9e.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un \u00e9l\u00e9ment au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou r\u00e9ordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu\u2019\u00e0 la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu\u2019\u00e0 la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu\u2019\u00e0 la derni\u00e8re lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-cha\u00eene depuis la premi\u00e8re lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-cha\u00eene depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-cha\u00eene depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiqu\u00e9e du texte.";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la premi\u00e8re occurrence de la cha\u00eene";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la derni\u00e8re occurrence de la cha\u00eene";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l\u2019index de la premi\u00e8re/derni\u00e8re occurrence de la premi\u00e8re cha\u00eene dans la seconde. Renvoie 0 si la cha\u00eene n\u2019est pas trouv\u00e9e.";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "cr\u00e9er le texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Cr\u00e9er un morceau de texte en agr\u00e9geant un nombre quelconque d\u2019\u00e9l\u00e9ments.";
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur sp\u00e9cifi\u00e9.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre \u00e0 l\u2019utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte \u00e0 l\u2019utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_TEXT_HELPURL = "http://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux c\u00f4t\u00e9s";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du c\u00f4t\u00e9 gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du c\u00f4t\u00e9 droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprim\u00e9s d\u2019un bout ou des deux.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "\u00e9l\u00e9ment";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Cr\u00e9er 'fixer %1'";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Cr\u00e9er 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_TAIL = "\u00e0";
Blockly.Msg.VARIABLES_SET_TITLE = "fixer";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu\u2019elle soit \u00e9gale \u00e0 la valeur de l\u2019entr\u00e9e.";
