goog.provide('Blockly.Msg.hr_hr');
goog.require('Blockly.Msg');
Blockly.Msg.ADD_COMMENT = "Dodaj komentar";
Blockly.Msg.CHANGE_VALUE_TITLE = "Promijeni vrijednost:";
Blockly.Msg.COLLAPSE_ALL = "Smanji blokove";
Blockly.Msg.COLLAPSE_BLOCK = "Smanji blokove";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Prva boja";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Druga boja";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http:\/\/meyerweb.com\/eric\/tools\/color-blend\/";
Blockly.Msg.COLOUR_BLEND_RATIO = "omjer";
Blockly.Msg.COLOUR_BLEND_TITLE = "izmiješaj";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Miješa dvije boje prema zadanom omjeru (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Odaberi boju s palete.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http:\/\/randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "nasumična boja";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Odabir nasumične boje.";
Blockly.Msg.COLOUR_RGB_BLUE = "plava";
Blockly.Msg.COLOUR_RGB_GREEN = "zelena";
Blockly.Msg.COLOUR_RGB_HELPURL = "http:\/\/www.december.com\/html\/spec\/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "crvena";
Blockly.Msg.COLOUR_RGB_TITLE = "oboji s";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Napravi boju s točno određenom količinom crvene, zelene i plave u njoj. Sve vrijednosti moraju biti između 0 i 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "izađi iz petlje";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "nastavi s idućim prolaskom kroz petlju";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Izađi iz glavne petlje.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Preskoči ostatak ove petlje i nastavi sa sljedećim ponavljanjem.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Upozorenje: Ovaj blok se smije koristiti isključivo unutar petlje.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#for_each";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "u listi";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "za svaku stavku";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Za svaku stavku na listi, varijabli '%1' daje vrijednost stavke, a potom izvršava zadane naredbe.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "od %1 do %2 s razmakom %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "broji s";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "U ovom bloku varijabla %1 poprima vrijednosti od početnog do krajnjeg broja, brojeći sa zadanim razmakom, a pritom se izvršavaju umetnuti blokovi.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Dodaje uvjet za Ako blok.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Dodaj posljednji uvjet, za sve preostale slučajeve, u Ako blok.";
Blockly.Msg.CONTROLS_IF_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Dodaj, ukloni ili razmjesti dijelove da preoblikuješ ovaj Ako blok.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "inače";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "inače ako";
Blockly.Msg.CONTROLS_IF_MSG_IF = "ako";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Ako je uvjet ispunjen, izvrši zadane naredbe.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Ako je uvjet ispunjen izvrši prvi blok naredbi, a inače izvrši drugi blok naredbi.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Ako je prvi uvjet ispunjen tada izvrši prvi blok naredbi, a inače, ako je drugi uvjet ispunjen, izvrši drugi blok naredbi.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Ako je ispunjen prvi uvjet, izvršava se prvi blok naredbi. Inače se, ako je ispunjen drugi uvjet, izvršava drugi blok naredbi. Ako nijedan uvjet nije ispunjen, izvršava se treći blok naredbi.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "napravi";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "ponovi %1 puta";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "ponovi";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "puta";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ponavlja određene naredbe nekoliko puta.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "ponavljaj dok ne bude";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "ponavljaj dok je";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Dok uvjet nije ispunjen, izvršava zadane naredbe.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Dok je uvjet ispunjen, izvršava zadane naredbe.";
Blockly.Msg.DELETE_BLOCK = "Obriši blok";
Blockly.Msg.DELETE_X_BLOCKS = "Obriši %1 blokova";
Blockly.Msg.DISABLE_BLOCK = "Onemogući blok";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliciraj";
Blockly.Msg.ENABLE_BLOCK = "Omogući blok";
Blockly.Msg.EXPAND_ALL = "Rastegni blok";
Blockly.Msg.EXPAND_BLOCK = "Rastegni blok";
Blockly.Msg.EXTERNAL_INPUTS = "Vanjski unosi";
Blockly.Msg.HELP = "Pomoć";
Blockly.Msg.INLINE_INPUTS = "Linijski unosi";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "napravi praznu listu";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Vraća listu, duljine 0, koja ne sadrži evidenciju podataka";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "popis";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Dodajte, maknite, ili preuredite dijelove kako bi podesili ovaj blok liste.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "napravi listu od";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Dodaje stavku na listu.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Napravite listu s bilo kojim brojem predmeta.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "prvi";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# s kraja";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "uzmi";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "uzmi i ukloni";
Blockly.Msg.LISTS_GET_INDEX_LAST = "posljednji";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "slučajno odabrani";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "ukloni";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Vraća prvi predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Vraća podatak na određeno mjesto na listi. Broj 1 je zadnji predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Vraća predmet na određeno mjesto u listi. Broj 1 je zadnji predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Vraća zadnji predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Vraća nasumičan predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Briše i vraća prvi predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Briše i vraća predmet s određenog mjesta u listi. Broj 1 je zadnji predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Briše i vraća predmet s određenog mjesta u listi. Broj 1 je prvi predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Briše i vraća zadnji predmet u listi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Briše i vraća nasumičan predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Briše prvi predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Briše podatak s određenog mjesta na listi. Broj 1 je zadnji predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Briše podatak s određenog mjesta na listi. Broj 1 je prvi predmet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Briše zadnji predmet iz liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Briše nasumičan predmet iz liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "do # od kraja";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "do #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "do zadnjeg";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "uzmi pod-listu od prvog";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "uzmi pod-listu od # od kraja";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "uzmi pod-listu od #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Stvara kopiju određenog dijela liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "pronađi prvo pojavljivanje predmeta";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "pronađi zadnje pojavljivanje predmeta";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Vraća indeks prvog \/ posljednjeg pojavljivanja predmeta iz liste. Vraća 0 ako tekst nije pronađen.";
Blockly.Msg.LISTS_INLIST = "u listi";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#is_empty";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 je prazno";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "duljina od %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Vraća duljinu liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "stvara listu s predmetom %1 koja se ponavlja %2 puta";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Stvara listu sastavljenu od dane vrijednosti koja se ponavlja određen broj puta.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "kao";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "unesite kod";
Blockly.Msg.LISTS_SET_INDEX_SET = "postaviti";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Umeće predmet na početak liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list.  #1 is the last item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list.  #1 is the first item.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false.  Returns false if the input is true.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returns null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";
Blockly.Msg.MATH_CHANGE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "by";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "change";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "average of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "max of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "min of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modes of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random item of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Return the largest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Return the smallest number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Return a random element from the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Return the standard deviation of the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Return the sum of all the numbers in the list.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";
Blockly.Msg.MATH_SINGLE_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Return the absolute value of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Return 10 to the power of a number.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";
Blockly.Msg.NEW_VARIABLE = "New variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "New variable name:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "with:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do something";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "to";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "input name:";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "append text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Append some text to variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Adjusting_text_case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first\/last occurrence of first text in the second text.  Returns 0 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returns true if the provided text is empty.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Printing_text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Getting_input_from_the_user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "http:\/\/en.wikipedia.org\/wiki\/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https:\/\/code.google.com\/p\/blockly\/wiki\/Text#Trimming_%28removing%29_spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "ukloni razmake s obje strane";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "ukloni razmake s lijeve strane";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "ukloni razmake s desne strane";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Vraća kopiju teksta bez razmaka s jedne ili obje strane.";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "var";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Napravi 'postavi %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Get";
Blockly.Msg.VARIABLES_GET_TAIL = "";
Blockly.Msg.VARIABLES_GET_TITLE = "";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Pokazuje vrijednost varijable.";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Napravi 'uzmi %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "http:\/\/code.google.com\/p\/blockly\/wiki\/Variables#Set";
Blockly.Msg.VARIABLES_SET_TAIL = "na";
Blockly.Msg.VARIABLES_SET_TITLE = "postavi";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Postavlja ovu varijablu da bude jednaka upisanoj vrijednosti.";
